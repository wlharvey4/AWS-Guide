# -*- mode:org; -*-

#+title:AWS Guide
#+author:Pinecone062
#+date:2019-12-22 21:49
#+macro:version Version 0.0.4


* AWS Glossary

https://docs.aws.amazon.com/general/latest/gr/glos-chap.html

** Developer Center

“Welcome developers!  The AWS Developer Center is your homepage for the AWS
developer community.  Build your first application on AWS, dig into our
technical documentation, or share your ideas with the community worldwide.”

https://aws.amazon.com/developer/

#+texinfo:@heading Build Your First Application

Dive into AWS and build your first web application.  In this tutorial, you'll
learn to build and deploy a web application on AWS, connect your app to a
backend database, and capture & analyze data on user behavior.

- [[https://aws.amazon.com/getting-started/projects/build-modern-app-fargate-lambda-dynamodb-python/][Start Tutorial]]


#+texinfo:@heading Choose Your Programming Language

** Identity and Access Management---IAM

#+cindex:Identity and Access Management
#+cindex:IAM

https://docs.aws.amazon.com/iam/index.html

AWS Identity and Access Management (IAM) is a web service for securely
controlling access to AWS services. With IAM, you can centrally manage
users, security credentials such as access keys, and permissions that
control which AWS resources users and applications can access.

*** IAM User Guide

https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html

Introduces you to AWS Identity and Access Management, helps you set up
users and groups, and shows you how to protect your resources with
access control policies. Also shows how to connect to other identity
services to grant external users access to your AWS resources.

*** IAM API Reference

https://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html

Describes all the API operations for AWS Identity and Access
Management in detail. Also provides sample requests, responses, and
errors for the supported web services protocols.

*** IAM CLI Reference

https://docs.aws.amazon.com/cli/latest/reference/iam/

Describes the AWS CLI commands that you can use to administer
IAM. Provides syntax, options, and usage examples for each command.

*** AWS IAM Access Analyzer

https://docs.aws.amazon.com/access-analyzer/latest/APIReference/Welcome.html

Describes the API operations for IAM Access Analyzer. Also provides
sample requests, responses, and errors for the supported web services
protocols.

*** Security Token Service---STS API Reference

https://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html

Describes all the API operations for AWS STS in detail. Also provides
sample requests, responses, and errors for the supported web services
protocols.

*** Security Token Service---STS in the AWS CLI Reference

https://docs.aws.amazon.com/cli/latest/reference/sts/

Describes the AWS CLI commands that you can use to generate temporary
security credentials. Provides syntax, options, and usage examples for
each command.

** Organizations

#+cindex:organizations

“Central governance and management across AWS accounts.”

https://aws.amazon.com/organizations/

[[https://aws.amazon.com/organizations/features/][AWS Organizations Features]]

[[https://aws.amazon.com/organizations/getting-started/][Getting Started with AWS Organizations]]

/AWS Organizations/ helps you centrally govern your environment as you
grow and scale your workloads on AWS.  Whether you are a growing
startup or a large enterprise, Organizations helps you to centrally
manage billing; control access, compliance, and security; and share
resources across your AWS accounts.

Using AWS Organizations, you can automate account creation, create
groups of accounts to reflect your business needs, and apply policies
for these groups for governance.  You can also simplify billing by
setting up a single payment method for all of your AWS accounts.
Through integrations with other AWS services, you can use
Organizations to define central configurations and resource sharing
across accounts in your organization.  AWS Organizations is available
to all AWS customers at no additional charge.

#+texinfo:@heading Benefits

- CENTRALLY MANAGE POLICIES ACROSS MULTIPLE AWS ACCOUNTS

- GOVERN ACCESS TO AWS SERVICES, RESOURCES, AND REGIONS

- AUTOMATE AWS ACCOUNT CREATION AND MANAGEMENT

- CONFIGURE AWS SERVICES ACROSS MULTIPLE ACCOUNTS

- CONSOLIDATE BILLING ACROSS MULTIPLE AWS ACCOUNTS


#+texinfo:@heading Use Cases

- IMPLEMENT AND ENFORCE CORPORATE SECURITY, AUDIT, AND COMPLIANCE
  POLICIES

- SHARE RESOURCES ACROSS ACCOUNTS

- AUTOMATE THE CREATION OF AWS ACCOUNTS AND CATEGORIZE WORKLOADS USING
  GROUPS


#+texinfo: @heading Tutorials and Guides

- [[https://aws.amazon.com/documentation/organizations/][Documentation]]
- [[http://docs.aws.amazon.com/organizations/latest/APIReference/Welcome.html][API Guide]]
- [[http://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started.html][Getting Started Guide]]
- [[http://docs.aws.amazon.com/organizations/latest/userguide/orgs_tutorials_basic.html][Tutorial: Creating and Configuring an Organization]]
- [[http://docs.aws.amazon.com/organizations/latest/userguide/orgs_tutorials_cwe.html][Tutorial: Monitor Important Changes to Your Organization with CloudWatch Events]]
- [[https://aws.amazon.com/premiumsupport/knowledge-center/iam-policy-service-control-policy/][Differences between a service control policy and an AWS Identity and Access Management (IAM) policy]]
- [[https://aws.amazon.com/blogs/security/][Security Blog]]

*** Organizational Unit---OU

#+cindex:Organizational Unit
#+cindex:OU

** Policies

*** Organizations Service Control Policy---SCP

#+cindex:organizations Service Control Policy
#+cindex:SCP

** Security Credentials

#+cindex:security credentials

https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html

#+cindex:authenticate
#+cindex:authorize
When you interact with AWS, you specify your AWS /security
credentials/ to verify who you are and whether you have permission to
access the resources that you are requesting.  AWS uses the /security
credentials/ to *authenticate* and *authorize* your requests.

#+begin_cartouche
For example, if you want to download a specific file from an Amazon
Simple Storage Service (Amazon S3) bucket, your credentials must allow
that access. If your credentials aren't authorized to download the
file, AWS denies your request.
#+end_cartouche

*** Root User Credentials

#+cindex:root user credentials

https://docs.aws.amazon.com/general/latest/gr/root-vs-iam.html

All AWS accounts have /root user credentials/ (that is, the credentials
of the account owner).  These credentials allow full access to all
resources in the account.

You cannot use policies within your account to explicitly deny access
to the root user.  You can only use an [[*Organizations Service Control Policy---SCP][AWS Organizations service
control policy (SCP)]] to limit permissions to an account, including
the root user, that is a member of an organization or organizational
unit (OU).

Because of this, we recommend that you delete your root user access
keys and then create AWS Identity and Access Management (IAM) user
credentials for everyday interaction with AWS.
** Simple Storage Service---S3
“Object storage built to store and retrieve any amount of data from anywhere”

https://aws.amazon.com/s3/

Amazon Simple Storage Service (Amazon S3) is an object storage service that
offers industry-leading scalability, data availability, security, and
performance.  Amazon S3 provides easy-to-use management features so you can
organize your data and configure finely-tuned access controls to meet your
specific business, organizational, and compliance requirements.

*** S3 Access Points

“Easily manage access for shared data sets on S3”

https://aws.amazon.com/s3/features/access-points/

#+cindex:access points
Access points are unique hostnames that customers create to enforce distinct
permissions and network controls for any request made through the access point.
Customers with shared data sets including data lakes, media archives, and
user-generated content can easily scale access for hundreds of applications by
creating individualized access points with names and permissions customized for
each application.  S3 Access Points is now available in all regions at no
additional cost.

**** TODO Article---Easily Manage Shared Data Sets with Amazon S3 Access Points
:PROPERTIES:
:uri:      https://aws.amazon.com/blogs/aws/easily-manage-shared-data-sets-with-amazon-s3-access-points/
:author:   Brandon West
:date:     December 3, 2019
:END:
*** S3 Features

https://aws.amazon.com/s3/features/

Amazon S3 has various features you can use to organize and manage your data in
ways that support specific use cases, enable cost efficiencies, enforce
security, and meet compliance requirements.

#+cindex:buckets
#+cindex:objects
- buckets :: Data is stored as objects within resources called “buckets”, and a
             single object can be up to 5 terabytes in size.


S3 features include:

#+cindex:metadata tags

- capabilities to append metadata tags to objects
- move and store data across the S3 Storage Classes
- configure and enforce data access controls
- secure data against unauthorized users
- run big data analytics
- monitor data at the object and bucket levels

**** Storage Classes

#+cindex:storage classes
- S3 Standard
- S3 Intelligent-Tiering
- S3 Standard-Infrequent Access (S3 Standard-IA)
- S3 One Zone-Infrequent Access (S3 One Zone-IA)
- Amazon S3 Glacier (S3 Glacier)
- Amazon S3 Glacier Deep Archive (S3 Glacier Deep Archive)

** Virtual Private Cloud---VPC

“Provision a logically isolated section of the AWS cloud where you can launch
AWS resources in a virtual network that you define”

[[https://aws.amazon.com/vpc/][VPC Home]]

[[https://docs.aws.amazon.com/vpc/][VPC Documentation]]

#+cindex:Virtual Private Cloud
#+cindex:VPC
/Amazon Virtual Private Cloud (Amazon VPC)/ lets you provision a logically
isolated section of the AWS Cloud where you can launch AWS resources in a
virtual network that you define.  You have complete control over your virtual
networking environment, including selection of your own IP address range,
creation of subnets, and configuration of route tables and network gateways.
You can use both IPv4 and IPv6 in your VPC for secure and easy access to
resources and applications.

You can easily customize the network configuration of your Amazon VPC.  For
example, you can create a public-facing subnet for your web servers that have
access to the internet.  You can also place your backend systems, such as
databases or application servers, in a private-facing subnet with no internet
access.  You can use multiple layers of security, including security groups and
network access control lists, to help control access to Amazon EC2 instances in
each subnet.

#+texinfo:@heading Get started with Amazon VPC

You can automatically provision AWS resources in a ready-to-use [[http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html#detecting-platform][default VPC]].
Configure this VPC by adding or removing subnets, attaching network gateways,
changing the default route table, and modifying the network ACLs.

Create additional VPCs from the Amazon VPC page on the AWS Management Console
by selecting the "Start VPC Wizard" button.  You will be presented with four
basic network topologies.  Select the one that most closely resembles the
network topology that you’d like to create and click the "Create VPC" button.
You can then customize the topology further to fit your needs more closely.
Shortly after, you can start launching Amazon EC2 instances inside your VPC.

#+texinfo:@heading Benefits

#+texinfo:@subheading Secure

#+cindex:security groups
#+cindex:network access control lists
Amazon VPC provides advanced security features, such as security groups and
network access control lists, to enable inbound and outbound filtering at the
instance and subnet level.  In addition, you can store data in Amazon S3 and
restrict access so that it’s only accessible from instances inside your VPC.
For additional security, you can create dedicated instances that are physically
isolated from other AWS accounts, at the hardware level.

#+texinfo:@subheading Simple

#+cindex:AWS Management Console
Create a VPC quickly and easily using the AWS Management Console.  Select from
common network setups and find the best match for your needs.  Subnets, IP
ranges, route tables, and security groups are automatically created.  You spend
less time setting up and managing, so you can concentrate on building the
applications that run in your VPCs.

#+texinfo:@subheading Customizable

Control your virtual networking environment, including selection of your own IP
address range, creation of subnets, and configuration of route tables and
network gateways.  Customize the network configuration, such as by creating a
public-facing subnet for your webservers that has access to the internet, and
placing your backend systems such as databases or application servers in a
private-facing subnet with no internet access.

#+texinfo:@heading Use Cases

#+texinfo:@subheading Extend your corporate network into the cloud

#+cindex:corporate network
#+cindex:corporate firewall
Move corporate applications to the cloud, launch additional web servers, or add
more compute capacity to your network by connecting your VPC to your corporate
network.  Because your VPC can be hosted behind your corporate firewall, you
can seamlessly move your IT resources into the cloud without changing how your
users access these applications.  You can select "VPC with a Private Subnet
Only and Hardware VPN Access" from the Amazon VPC console wizard to create a
VPC that supports this use case

#+texinfo:@subheading Securely connect cloud applications to your datacenter

#+cindex:IPsec VPN
An IPsec VPN connection between your Amazon VPC and your corporate network
encrypts all communication between the application servers in the cloud and
databases in your data center.  Web servers and application servers in your VPC
can leverage Amazon EC2 elasticity and Auto Scaling features to grow and shrink
as needed.  You can create a VPC to support this use case by selecting "VPC
with Public and Private Subnets and Hardware VPN Access" in the Amazon VPC
console wizard.

#+texinfo:@subheading Out-of-band and inline traffic inspection

Amazon VPC traffic mirroring duplicates the traffic, along with full payload
data, from elastic network interfaces (ENIs) of EC2 instances, and delivers it
to out-of-band monitoring and security analysis tools.

Amazon VPC ingress routing allows you to easily deploy network and security
appliances, including third-party offerings, inline to the inbound or outbound
Amazon VPC traffic.  Inline traffic inspection helps you screen and secure
traffic to protect your workloads from malicious actors.
* AWS Documentation

“Find user guides, developer guides, API references, tutorials, and more.”

- [[https://aws.amazon.com/documentation/][Documentation]]

#+texinfo:@heading Start building with SDKs and tools

#+texinfo:@subheading Access and manage AWS services with your preferred development language or platform

https://docs.aws.amazon.com/index.html

** Guides and API References

** Tutorials and Projects

#+texinfo:@heading Learn with Introductory Tutorials & Projects

- [[https://aws.amazon.com/getting-started/][Tutorials]]

** SDKs and Toolkits

https://aws.amazon.com/getting-started/tools-sdks/

*** Command Line Interface
https://aws.amazon.com/cli/

*** JavaScript
https://aws.amazon.com/sdk-for-browser/

*** Python
https://aws.amazon.com/sdk-for-python/

*** PHP
https://aws.amazon.com/sdk-for-php/

*** .NET
https://aws.amazon.com/sdk-for-net/

*** Ruby
https://aws.amazon.com/sdk-for-ruby/

*** Java
https://aws.amazon.com/sdk-for-java/

*** Go
https://aws.amazon.com/sdk-for-go/

*** Node
https://aws.amazon.com/sdk-for-node-js/

*** C++
https://aws.amazon.com/sdk-for-cpp/

*** Android
https://docs.aws.amazon.com/aws-mobile/latest/developerguide/getting-started.html

*** iOS
https://docs.aws.amazon.com/aws-mobile/latest/developerguide/getting-started.html

** General Resources

* AWS Developer Center

“Welcome developers!  The AWS Developer Center is your homepage for the AWS
developer community.  Build your first application on AWS, dig into our
technical documentation, or share your ideas with the community worldwide.”

https://aws.amazon.com/developer/

#+texinfo:@heading Build Your First Application

Dive into AWS and build your first web application.  In this tutorial, you'll
learn to build and deploy a web application on AWS, connect your app to a
backend database, and capture & analyze data on user behavior.

- [[https://aws.amazon.com/getting-started/projects/build-modern-app-fargate-lambda-dynamodb-python/][Start Tutorial]]

#+texinfo:@heading Choose Your Programming Language

** Explore Java on AWS
https://aws.amazon.com/developer/language/java/

** Explore Javascript on AWS
https://aws.amazon.com/developer/language/javascript/

** Explore Python on AWS
https://aws.amazon.com/developer/language/python/

** Explore Ruby on AWS
https://aws.amazon.com/developer/language/ruby/

** AWS SDK for Go
https://aws.amazon.com/sdk-for-go/

** AWS SDK for C++
https://aws.amazon.com/sdk-for-cpp/

* Getting Started Resource Center

“Learn AWS fundamentals, connect with the AWS developer community, and advance
your knowledge with certifications.”

https://aws.amazon.com/getting-started/

** Build Your First Web Application

A great introduction to AWS, this tutorial teaches you how to deploy a static
website, run a web server, set up a database, authenticate users, and analyze a
clickstream.  It consists of 5 separate but related modules which can be
completed individually.

- [[https://aws.amazon.com/getting-started/projects/build-modern-app-fargate-lambda-dynamodb-python/?e=gs&p=gsrc][Build]]

* Main Index
:PROPERTIES:
:unnumbered: t
:index:    cp
:END:

* End                                                              :noexport:


#+texinfo_filename:aws-glossary.info
#+texinfo_class: info
#+texinfo_header:
#+texinfo_post_header:
#+subtitle:
#+subauthor:
#+texinfo_dir_category:Cloud
#+texinfo_dir_title:AWS Glossary
#+texinfo_dir_desc:AWS glossary
#+texinfo_printed_title:AWS Glossary


# Local Variables:
# fill-column: 79
# time-stamp-pattern: "8/^\\#\\+date:%:y-%02m-%02d %02H:%02M$"
# eval: (electric-quote-local-mode)
# End:
